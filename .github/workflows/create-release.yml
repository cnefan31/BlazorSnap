name: Create Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version (e.g., v1.0.0)'
        required: true
        type: string
      release_notes:
        description: 'Release notes'
        required: false
        type: string
        default: 'New release with bug fixes and improvements'

jobs:
  create-release:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Validate version format
      run: |
        if [[ ! "${{ github.event.inputs.version }}" =~ ^v[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
          echo "‚ùå Version must be in format v1.0.0"
          exit 1
        fi
        echo "‚úÖ Version format is valid"
        
    - name: Update manifest version
      run: |
        VERSION="${{ github.event.inputs.version }}"
        VERSION_NO_V="${VERSION#v}"  # Remove 'v' prefix
        
        # Update manifest.json
        jq --arg version "$VERSION_NO_V" '.version = $version' src/manifest.json > temp.json
        mv temp.json src/manifest.json
        
        echo "Updated manifest.json to version $VERSION_NO_V"
        
    - name: Update CHANGELOG.md
      run: |
        VERSION="${{ github.event.inputs.version }}"
        VERSION_NO_V="${VERSION#v}"
        DATE=$(date +%Y-%m-%d)
        
        # Create new changelog entry
        {
          echo "# Changelog"
          echo ""
          echo "## [$VERSION_NO_V] - $DATE"
          echo ""
          echo "${{ github.event.inputs.release_notes }}"
          echo ""
          tail -n +3 CHANGELOG.md
        } > temp_changelog.md
        
        mv temp_changelog.md CHANGELOG.md
        
        echo "Updated CHANGELOG.md"
        
    - name: Commit version changes
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add src/manifest.json CHANGELOG.md
        git commit -m "Release ${{ github.event.inputs.version }}"
        git push
        
    - name: Create Release
      uses: softprops/action-gh-release@v2
      with:
        tag_name: ${{ github.event.inputs.version }}
        name: BlazorSnap ${{ github.event.inputs.version }}
        body: |
          ## üöÄ What's New in ${{ github.event.inputs.version }}
          
          ${{ github.event.inputs.release_notes }}
          
          ## üì¶ Installation Options
          
          ### üè™ Browser Stores (Recommended)
          - **Chrome Web Store**: [Install BlazorSnap](https://chromewebstore.google.com/detail/blazorsnap/iibbeljciecfkdbfbkhmdbbcegbkhoke)
          - **Microsoft Edge Add-ons**: [Install BlazorSnap](https://microsoftedge.microsoft.com/addons/detail/blazorsnap/mkfecbnmpjbkoocagddgkgbaidnjkmkb)
          
          ### üíª Manual Installation (Development)
          1. Download the `BlazorSnap-store-v*.zip` file below
          2. Extract it to a folder
          3. Open Chrome/Edge and go to `chrome://extensions/` or `edge://extensions/`
          4. Enable "Developer mode"
          5. Click "Load unpacked" and select the extracted folder
          
          ### üë®‚Äçüíª For Developers
          Download the `BlazorSnap-v*.zip` file which includes all source files and documentation.
          
          ## üîó Links
          - **Documentation**: [GitHub Repository](https://github.com/${{ github.repository }})
          - **Issues & Support**: [GitHub Issues](https://github.com/${{ github.repository }}/issues)
          - **Full Changelog**: [CHANGELOG.md](https://github.com/${{ github.repository }}/blob/main/CHANGELOG.md)
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
